// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AutonomousCommand.h"

#include "../Robot.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AutonomousCommand::AutonomousCommand(): frc::Command() {

        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void AutonomousCommand::Initialize() {
	start_time = Timer::GetFPGATimestamp();
	SetTimeout(RAMP_TIME * 2 + DELAY);
}

// Called repeatedly when this Command is scheduled to run
void AutonomousCommand::Execute() {
	double elapsed = Timer::GetFPGATimestamp() - start_time;

	if (elapsed < DELAY) {
		// do nothing
	} else {
		elapsed -= DELAY;

		if (start_time < RAMP_TIME) {
			// ramping up
			Robot::driveTrain->drive(elapsed / RAMP_TIME * TOP_SPEED);
		} else {
			// ramping down
			Robot::driveTrain->drive(
					(1.0 - (elapsed - RAMP_TIME) / RAMP_TIME) * TOP_SPEED);
		}
	}
}

// Make this return true when this Command no longer needs to run execute()
bool AutonomousCommand::IsFinished() {
    return IsTimedOut();
}

// Called once after isFinished returns true
void AutonomousCommand::End() {
	Robot::driveTrain->drive(0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousCommand::Interrupted() {
	End();
}
